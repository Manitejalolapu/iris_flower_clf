# -*- coding: utf-8 -*-
"""iris

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hE68kC99H6rUhSuNMJLOyU0N4_0Z60rT
"""

# Commented out IPython magic to ensure Python compatibility.
import warnings
warnings.filterwarnings('ignore')

import pandas as pd
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns
sns.set(style="white",color_codes=True)

iris = pd.read_csv("/content/Iris.csv")
iris.head(150)

iris["Species"].value_counts()

"""scatter plot

"""

sns.FacetGrid(iris, hue="Species",height=6).map(plt.scatter,"PetalLengthCm","SepalWidthCm").add_legend()

"""logistic regression

"""

flower_mapping={'Iris-setosa':0,'Iris-versicolor': 1,'Iris-virginica':2}
iris["Species"]=iris["Species"].map(flower_mapping)
iris.head()

"""preparing inputs and outputs

"""

X=iris[['SepalLengthCm','SepalWidthCm','PetalLengthCm','PetalWidthCm']].values
y=iris[['Species']].values

"""logistic regression"""

from sklearn.linear_model import LogisticRegression

model=LogisticRegression()

model.fit(X, y)

"""accuracy"""

model.score(X,y)*100

"""make prediction"""

expected=y
predicted=model.predict(x)
predicted

from sklearn import metrics
print(metrics.classification_report(expected,predicted))
print(metrics.confusion_matrix(expected,predicted))

model = LogisticRegression(C=20,penalty='l2' )
model.fit(X,y)

model.score(X,y)*100